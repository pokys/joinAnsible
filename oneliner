Set-ExecutionPolicy Bypass -Scope LocalMachine -Force
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
$url = "https://raw.githubusercontent.com/ansible/ansible-documentation/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
$file = "$env:temp\ConfigureRemotingForAnsible.ps1"
(New-Object -TypeName System.Net.WebClient).DownloadFile($url, $file)
Invoke-Expression "$file -SkipNetworkProfileCheck"
$Username="ansible"; $Password=ConvertTo-SecureString "Ansiblehelper" -AsPlainText -Force; if (-not (Get-LocalUser -Name $Username -ErrorAction SilentlyContinue)) { New-LocalUser -Name $Username -Password $Password -Description 'Účet pro Ansible správu' -PasswordNeverExpires; Add-LocalGroupMember -Group 'Administrators' -Member $Username; Write-Host "Uživatel $Username vytvořen a přidán do Administrators." } else { Write-Host "Uživatel $Username již existuje." }



Set-ExecutionPolicy Bypass -Scope LocalMachine -Force; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $url = "https://raw.githubusercontent.com/ansible/ansible-documentation/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"; $file = "$env:temp\ConfigureRemotingForAnsible.ps1"; Invoke-WebRequest -Uri $url -OutFile $file; & $file -SkipNetworkProfileCheck; $Username="ansible"; $Password=ConvertTo-SecureString "Ansiblehelper" -AsPlainText -Force; if (-not (Get-LocalUser -Name $Username -ErrorAction SilentlyContinue)) { New-LocalUser -Name $Username -Password $Password -Description 'Účet pro Ansible správu' -PasswordNeverExpires; Add-LocalGroupMember -Group 'Administrators' -Member $Username; Write-Host "Uživatel $Username vytvořen a přidán do Administrators." } else { Write-Host "Uživatel $Username již existuje." }
